// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: playplay.proto

package playplay

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Interactivity int32

const (
	Interactivity_UNKNOWN_INTERACTIVITY Interactivity = 0
	Interactivity_INTERACTIVE           Interactivity = 1
	Interactivity_DOWNLOAD              Interactivity = 2
)

// Enum value maps for Interactivity.
var (
	Interactivity_name = map[int32]string{
		0: "UNKNOWN_INTERACTIVITY",
		1: "INTERACTIVE",
		2: "DOWNLOAD",
	}
	Interactivity_value = map[string]int32{
		"UNKNOWN_INTERACTIVITY": 0,
		"INTERACTIVE":           1,
		"DOWNLOAD":              2,
	}
)

func (x Interactivity) Enum() *Interactivity {
	p := new(Interactivity)
	*p = x
	return p
}

func (x Interactivity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Interactivity) Descriptor() protoreflect.EnumDescriptor {
	return file_playplay_proto_enumTypes[0].Descriptor()
}

func (Interactivity) Type() protoreflect.EnumType {
	return &file_playplay_proto_enumTypes[0]
}

func (x Interactivity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Interactivity) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Interactivity(num)
	return nil
}

// Deprecated: Use Interactivity.Descriptor instead.
func (Interactivity) EnumDescriptor() ([]byte, []int) {
	return file_playplay_proto_rawDescGZIP(), []int{0}
}

type ContentType int32

const (
	ContentType_UNKNOWN_CONTENT_TYPE ContentType = 0
	ContentType_AUDIO_TRACK          ContentType = 1
	ContentType_AUDIO_EPISODE        ContentType = 2
	ContentType_AUDIO_ADD            ContentType = 3
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0: "UNKNOWN_CONTENT_TYPE",
		1: "AUDIO_TRACK",
		2: "AUDIO_EPISODE",
		3: "AUDIO_ADD",
	}
	ContentType_value = map[string]int32{
		"UNKNOWN_CONTENT_TYPE": 0,
		"AUDIO_TRACK":          1,
		"AUDIO_EPISODE":        2,
		"AUDIO_ADD":            3,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_playplay_proto_enumTypes[1].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_playplay_proto_enumTypes[1]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ContentType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ContentType(num)
	return nil
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_playplay_proto_rawDescGZIP(), []int{1}
}

type PlayPlayLicenseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       *int32         `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Token         []byte         `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	CacheId       []byte         `protobuf:"bytes,3,opt,name=cache_id,json=cacheId" json:"cache_id,omitempty"`
	Interactivity *Interactivity `protobuf:"varint,4,opt,name=interactivity,enum=spotify.playplay.proto.Interactivity" json:"interactivity,omitempty"`
	ContentType   *ContentType   `protobuf:"varint,5,opt,name=content_type,json=contentType,enum=spotify.playplay.proto.ContentType" json:"content_type,omitempty"`
	Timestamp     *int64         `protobuf:"varint,6,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (x *PlayPlayLicenseRequest) Reset() {
	*x = PlayPlayLicenseRequest{}
	mi := &file_playplay_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayPlayLicenseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayPlayLicenseRequest) ProtoMessage() {}

func (x *PlayPlayLicenseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playplay_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayPlayLicenseRequest.ProtoReflect.Descriptor instead.
func (*PlayPlayLicenseRequest) Descriptor() ([]byte, []int) {
	return file_playplay_proto_rawDescGZIP(), []int{0}
}

func (x *PlayPlayLicenseRequest) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *PlayPlayLicenseRequest) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *PlayPlayLicenseRequest) GetCacheId() []byte {
	if x != nil {
		return x.CacheId
	}
	return nil
}

func (x *PlayPlayLicenseRequest) GetInteractivity() Interactivity {
	if x != nil && x.Interactivity != nil {
		return *x.Interactivity
	}
	return Interactivity_UNKNOWN_INTERACTIVITY
}

func (x *PlayPlayLicenseRequest) GetContentType() ContentType {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return ContentType_UNKNOWN_CONTENT_TYPE
}

func (x *PlayPlayLicenseRequest) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type PlayPlayLicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObfuscatedKey []byte `protobuf:"bytes,1,opt,name=obfuscated_key,json=obfuscatedKey" json:"obfuscated_key,omitempty"`
	Something     []byte `protobuf:"bytes,2,opt,name=something" json:"something,omitempty"`
}

func (x *PlayPlayLicenseResponse) Reset() {
	*x = PlayPlayLicenseResponse{}
	mi := &file_playplay_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayPlayLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayPlayLicenseResponse) ProtoMessage() {}

func (x *PlayPlayLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playplay_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayPlayLicenseResponse.ProtoReflect.Descriptor instead.
func (*PlayPlayLicenseResponse) Descriptor() ([]byte, []int) {
	return file_playplay_proto_rawDescGZIP(), []int{1}
}

func (x *PlayPlayLicenseResponse) GetObfuscatedKey() []byte {
	if x != nil {
		return x.ObfuscatedKey
	}
	return nil
}

func (x *PlayPlayLicenseResponse) GetSomething() []byte {
	if x != nil {
		return x.Something
	}
	return nil
}

var File_playplay_proto protoreflect.FileDescriptor

var file_playplay_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x16, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x70, 0x6c,
	0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x02, 0x0a, 0x16, 0x50, 0x6c, 0x61,
	0x79, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x61, 0x63, 0x68, 0x65, 0x49, 0x64, 0x12, 0x4b,
	0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x70, 0x6c, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x5e, 0x0a, 0x17, 0x50, 0x6c, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x69, 0x6e,
	0x67, 0x2a, 0x49, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x02, 0x2a, 0x5a, 0x0a, 0x0b,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x54,
	0x52, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f,
	0x45, 0x50, 0x49, 0x53, 0x4f, 0x44, 0x45, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x55, 0x44,
	0x49, 0x4f, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x03, 0x42, 0x4c, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x70, 0x6c, 0x61, 0x79,
	0x48, 0x02, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58,
	0x69, 0x61, 0x6f, 0x4d, 0x65, 0x6e, 0x67, 0x58, 0x69, 0x6e, 0x58, 0x2f, 0x73, 0x70, 0x2d, 0x64,
	0x6c, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x70, 0x6c, 0x61, 0x79, 0x3b, 0x70, 0x6c,
	0x61, 0x79, 0x70, 0x6c, 0x61, 0x79,
}

var (
	file_playplay_proto_rawDescOnce sync.Once
	file_playplay_proto_rawDescData = file_playplay_proto_rawDesc
)

func file_playplay_proto_rawDescGZIP() []byte {
	file_playplay_proto_rawDescOnce.Do(func() {
		file_playplay_proto_rawDescData = protoimpl.X.CompressGZIP(file_playplay_proto_rawDescData)
	})
	return file_playplay_proto_rawDescData
}

var file_playplay_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_playplay_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_playplay_proto_goTypes = []any{
	(Interactivity)(0),              // 0: spotify.playplay.proto.Interactivity
	(ContentType)(0),                // 1: spotify.playplay.proto.ContentType
	(*PlayPlayLicenseRequest)(nil),  // 2: spotify.playplay.proto.PlayPlayLicenseRequest
	(*PlayPlayLicenseResponse)(nil), // 3: spotify.playplay.proto.PlayPlayLicenseResponse
}
var file_playplay_proto_depIdxs = []int32{
	0, // 0: spotify.playplay.proto.PlayPlayLicenseRequest.interactivity:type_name -> spotify.playplay.proto.Interactivity
	1, // 1: spotify.playplay.proto.PlayPlayLicenseRequest.content_type:type_name -> spotify.playplay.proto.ContentType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_playplay_proto_init() }
func file_playplay_proto_init() {
	if File_playplay_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_playplay_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_playplay_proto_goTypes,
		DependencyIndexes: file_playplay_proto_depIdxs,
		EnumInfos:         file_playplay_proto_enumTypes,
		MessageInfos:      file_playplay_proto_msgTypes,
	}.Build()
	File_playplay_proto = out.File
	file_playplay_proto_rawDesc = nil
	file_playplay_proto_goTypes = nil
	file_playplay_proto_depIdxs = nil
}
